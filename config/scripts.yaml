demo_google_tts:
  alias: Demo Google TTS
  sequence:
  - service: tts.google_translate_say
    data:
      cache: false
      entity_id: media_player.wheatley
      message: Hello. I am the Google TTS Home Assistant
  mode: single
  icon: mdi:google
demo_amazon_polly_tts:
  alias: Demo Amazon Polly TTS
  sequence:
  - service: tts.amazon_polly_say
    data:
      cache: false
      entity_id: media_player.wheatley
      message: Hello Hannah! You were built to tackle the world. You are not the cheerleader
        for someone else. You are not meant to sit on the sidelines. You were built
        to create your own life and challenge yourself daily. Go out there and tackle
        today, I believe in you!
  mode: single
  icon: mdi:account
speech_processing:
  alias: Speech processing
  sequence:
  - condition: and
    conditions:
    - condition: or
      conditions:
      - condition: state
        entity_id: person.boris
        state: home
      - condition: state
        entity_id: input_boolean.guest_mode
        state: 'on'
    - condition: time
      after: 08:00:00
      before: 02:00:00
    - condition: state
      entity_id: input_boolean.speech_notifications
      state: 'on'
  - service: media_player.volume_set
    data:
      volume_level: "{% if now().strftime('%H')|int < 12 and now().strftime('%H')|int
        > 9 %}\n  0.3\n{% elif now().strftime('%H')|int > 12 and now().strftime('%H')|int
        < 20 %}\n  0.5\n{% else %}\n  0.3\n{% endif %}"
    target:
      device_id: 238422b47f006e2e9cb6f685ac779937
  - service: media_player.play_media
    target:
      entity_id: media_player.wheatley
    data:
      media_content_id: media-source://tts/google_translate?message={{ speech_message
        }}
      media_content_type: provider
    metadata:
      thumbnail: https://brands.home-assistant.io/_/google_translate/logo.png
      media_class: app
      children_media_class:
      navigateIds:
      - {}
      - media_content_type: app
        media_content_id: media-source://tts
      - media_content_type: provider
        media_content_id: media-source://tts/google_translate?message={{ speech_message
          }}
  mode: queued
  icon: mdi:microphone-message
  max: 10
speech_engine:
  alias: Speech engine
  sequence:
  - condition: or
    conditions:
    - condition: state
      entity_id: input_boolean.guest_mode
      state: 'on'
    - condition: state
      entity_id: group.family
      state: home
  - service: script.speech_processing
    data:
      speech_message: "{%- macro dark_outside() -%} {{ [\n    'It is pretty dark outside.
        I will turn on the outside lights now.',\n    'The sun is offical down. Exterior
        Cameras are now motion activated.',\n    'The sun has been ushered off the
        stage. Activating the perimiter cameras.',\n    'It is a little past Sunset.
        Time to turn on the outside lights. I am on it.',\n    'I will switch on the
        outside lights. It is getting dark outside.',\n    'Time to turn on the front
        lights. I will take care of it.',\n    'Switching to night mode! ',\n    'If
        you have not looked outside lately the light of the day is gone.',\n    'The
        outside world has switched to dark mode.'\n]|random }} {%- endmacro -%}\n{%-
        macro responsibilities() -%}\n{%- endmacro -%}\n{%- macro light_check() -%}
        {% if states.group.all_lights.state != 'off' -%}\n    There are\n{% for state
        in states.light if state.state == 'on' -%}\n    {%- if loop.last -%}\n    {{
        loop.index }}\n    {%- endif -%}\n{%- endfor %} lights on right now. {% set
        comma = joiner(', ') %} The {% for group in states.group|groupby('state')
        -%}\n    {%- for entity in group.list if entity.state == 'on'\n    and entity.name.split('
        ')[1]|lower == 'lights'\n    and entity.name.split(' ')[0]|lower != 'all'\n
        \   and entity.name.split(' ')[0]|lower != 'interior'\n    -%}\n    {{ 'and'
        if loop.last and not loop.first else comma() }}\n    {{ entity.name|replace('Lights','')}}\n
        \   {%- endfor -%}\n{%- endfor -%} lights are on. {%- endif -%} {%- endmacro
        -%}\n{%- macro moon() -%}\n  {%- if states.sensor.moon.state == 'Full moon'
        -%}\n    {{ [\n         \"Check out the full moon tonight!\",\n         \"Hey
        look, There is the full moon. \",\n         \"The moon is huge! And full.
        \",\n         \"If you want to see the full moon tonight is the night.\"\n
        \        ] | random }}\n  {%- endif -%}\n{%- endmacro -%}\n{%- macro holiday()
        -%} {% if states.sensor.holiday.state != '' %}\n    Today is {{ states.sensor.holiday.state
        }}.\n{% endif %} {%- endmacro -%}\n{# YOUTUBE VIDEO ********* https://www.vcloudinfo.com/2019/11/adding-days-until-sensor-to-my-home-assistant-speech-routines.html
        #} {%- macro days_until() -%} {%- if states('sensor.mothers_countdown') |
        int(9999)< 20  -%}\n  and don't forget, there is only {{ states.sensor.mothers_countdown.state
        }} days until Mothers day!\n{%- elif states('sensor.fathers_countdown') |
        int(9999)< 20  -%}\n    and don't forget, there are {{ states.sensor.fathers_countdown.state
        }} days until Fathers day!\n{%- elif states('sensor.easter_countdown') | int(9999)<
        15  -%}\n    and don't forget, there are {{ states.sensor.easter_countdown.state
        }} days until Easter Sunday!\n{%- elif states('sensor.thanksgiving_day_countdown')
        | int(9999)< 10 and states('sensor.thanksgiving_day_countdown') | int(9999)>
        0  -%}\n    and don't forget, there are {{ states.sensor.thanksgiving_day_countdown.state
        }} days until Thanksgiving\n{%- elif states('sensor.thanksgiving_day_countdown')
        | int(9999)< 1  -%}\n    and don't forget, Thanksgiving is tomorrow!\n{%-
        elif states('sensor.halloween_countdown') | int(9999)< 30 and states('sensor.halloween_countdown')
        | int(9999)> 0 -%}\n    and don't forget, there are {{ states.sensor.halloween_countdown.state
        }} Spooky days until Halloween!\n{%- elif states('sensor.halloween_countdown')
        | int(9999)< 1  -%}\n    and don't forget, Tomorrow is Halloween!\n{%- elif
        states('sensor.chanukkah_countdown') | int(9999)< 15  -%}\n    and don't forget,
        there are {{ states.sensor.chanukkah_countdown.state }} days until Chanukkah!\n{%-
        elif states('sensor.christmas_countdown') | int(9999)< 30 and states('sensor.christmas_countdown')
        | int(9999)> 0  -%}\n    and don't forget, there are {{ states.sensor.christmas_countdown.state
        }} Merry days until Christmas!\n{%- elif states('sensor.christmas_countdown')
        | int(9999)< 1  -%}\n    and don't forget, Santa Claus is coming tomorrow!\n{%
        endif %} {%- endmacro -%}\n{# a macro that removes all newline characters,
        empty spaces, and returns formatted text and replaces underscores with spaces
        \ #} {%- macro cleanup(data) -%}\n  {%- for item in data.split(\"\\n\")  if
        item | trim != \"\" -%}\n  {{ item | trim | replace(\"_\", \" \") }} {% endfor
        -%}\n{%- endmacro -%}\n{# ********************************************* #}
        {#  ******** Start the Speech routines ********  #} {# *********************************************
        #}\n{# a macro to call all macros :)  #} {%- macro mother_of_all_macros()
        -%}\n\n  {% if call_no_announcement != 1 %}\n    {% if now().strftime('%H')|int(9999)<
        12 and now().strftime('%H')|int(9999)> 6 %}\n        Good morning.\n    {%
        elif now().strftime('%H')|int(9999)>= 12 and now().strftime('%H')|int(9999)<
        17 %}\n        Good afternoon.\n    {% else %}\n        Good evening.\n    {%
        endif %}\n  {% endif %}\n\n  {# Called from Annoucenments #}\n  {{ personarriving
        | default }}\n\n  {# Called from Nest when thermostats turn on #}\n  {{ NestStatus
        | default }}\n\n  {% if (states('sensor.blitzortung_lightning_counter')|int(0))
        > 0 %}\n  {{ lightning() }}\n  {% endif %}\n\n  {% if call_dark_outside ==
        1 %}\n  {{ dark_outside() }}\n  {% endif %}\n\n  {{ NewDevice | default }}\n\n
        \ {% if call_light_check == 1 %}\n  {{ light_check() }}\n  {% endif %}\n\n
        \ {% if call_responsibilities == 1 %}\n  {{ responsibilities() }}\n  {% endif
        %}\n\n  {% if value1 is not none %}\n  {{ value1 | default }}\n  {% endif
        %}\n\n  {# call a Random fact about the house or inspiration quote #}\n  {{
        ([moon, holiday, days_until]|random)() }}\n\n{%- endmacro -%} {{- cleanup(mother_of_all_macros())
        -}}"
  mode: queued
  icon: mdi:microphone-message
  max: 10
turn_off_all:
  alias: Turn off all lights
  sequence:
  - service: light.turn_off
    data: {}
    target:
      entity_id:
      - light.boven
      - light.woonkamer
  mode: single
  icon: mdi:hazard-lights
interior_off:
  alias: Interior off
  sequence:
  - service: script.turn_off_all
    data: {}
  mode: single
  icon: mdi:hazard-lights
